#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# include system information
include /usr/share/dpkg/architecture.mk

# set CROSS_COMPILE only when cross-compiling
CROSS_COMPILE=
ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
	CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)-
endif

# extract value of debhelper parallel option
PARALLEL=$(shell $(CURDIR)/parse-debopts.sh $(DEB_BUILD_OPTIONS))

KDESTDIR=$(CURDIR)/debian/linux-image-4.9.y-imx6-sr
HDESTDIR=$(CURDIR)/debian/linux-headers-4.9.y-imx6-sr
DDESTDIR=$(CURDIR)/debian/linux-4.9.y-imx6-sr-dev
ADESTDIR=$(CURDIR)/debian/imx-kernel-api-4.9.y-imx6-sr

# kernel version information
BASEVERSION=4.9.205
LOCALVERSION=-imx6-sr
SCMVERSION=
ARCH=arm
IMAGE=zImage

%:
	dh $@ --parallel --sourcedirectory=linux --builddirectory=build

override_dh_auto_clean:
	dh_auto_clean
	rm -rf build
	# also make sure source-tree is really clean
	cd linux; make mrproper

override_dh_auto_configure:
	mkdir build
	find config -name "*.conf" | sort | xargs ./linux/scripts/kconfig/merge_config.sh -O build -m ./linux/arch/arm/configs/imx_v7_cbi_hb_defconfig
	./linux/scripts/config --file build/.config --set-str LOCALVERSION $(LOCALVERSION)
	./linux/scripts/config --file build/.config --disable LOCALVERSION_AUTO
	make -C linux O="$(CURDIR)/build" ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) olddefconfig

override_dh_auto_build:
	make -C build -j$(PARALLEL) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) LOCALVERSION= dtbs $(IMAGE) modules

override_dh_auto_install:
	# install kernel image
	mkdir -vp "$(KDESTDIR)/boot"
	install -v -m755 build/arch/$(ARCH)/boot/$(IMAGE) $(KDESTDIR)/boot/$(IMAGE)-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)
	install -v -m644 build/System.map $(KDESTDIR)/boot/System.map-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)
	install -v -m644 build/.config $(KDESTDIR)/boot/config-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)

	# install DTBs
	mkdir -vp "$(KDESTDIR)/boot/dtbs/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)"
	find build/arch/$(ARCH)/boot/dts/ -name "*.dtb" -exec install -v -m644 {} "$(KDESTDIR)/boot/dtbs/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/" \;

	# install modules
	make -C build -j$(PARALLEL) INSTALL_MOD_STRIP=1 ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) INSTALL_MOD_PATH=$(KDESTDIR) modules_install
	rm -fv $(KDESTDIR)/lib/modules/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/source
	rm -fv $(KDESTDIR)/lib/modules/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/build

	# install kernel headers
	sh install_devel_files.sh $(ARCH) linux build $(HDESTDIR)/usr/src/linux-headers-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)

	# add source and build symlinks
	mkdir -p $(HDESTDIR)/lib/modules/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)
	ln -sfv /usr/src/linux-headers-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) $(HDESTDIR)/lib/modules/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/source
	ln -sfv /usr/src/linux-headers-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) $(HDESTDIR)/lib/modules/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/build

	# install the public API headers
	make -C build ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) INSTALL_HDR_PATH=$(DDESTDIR)/usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) headers_install
	mv $(DDESTDIR)/usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/include/* $(DDESTDIR)/usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/
	rm -rf $(DDESTDIR)/usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)/include
	find $(DDESTDIR)/usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) -name "*.cmd" -delete

	# install symlink to public API headers
	mkdir -p $(ADESTDIR)/usr/include
	ln -sv /usr/include/kernel-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) $(ADESTDIR)/usr/include/imx-kernel-api

	# move installed firmware into a kernelbuild-specific subfolder
	# if no firmware is installed, created an empty folder for it
	mkdir -p $(KDESTDIR)/lib/firmware
	mv $(KDESTDIR)/lib/firmware $(KDESTDIR)/lib/firmware-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)
	mkdir -p $(KDESTDIR)/lib/firmware
	mv $(KDESTDIR)/lib/firmware-$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION) $(KDESTDIR)/lib/firmware/$(BASEVERSION)$(LOCALVERSION)$(SCMVERSION)
	

override_dh_auto_test:
	# don't test

override_dh_strip:
	dh_strip --package=linux-image-4.9.y-imx6-sr
	# headers contain binary utilities built for the build host cpu
	DEB_HOST_GNU_TYPE=$(DEB_BUILD_GNU_TYPE) dh_strip --package=linux-headers-4.9.y-imx6-sr
	# no need to strip -dev package, it is header-only
