#!/bin/sh
# prerm script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
KERNEL_LOCALVERSION=4.9.205-imx6-sr
KERNEL_IMAGE=zImage

case $1 in
    remove|deconfigure)
	# if there is a boot symlink to this kernel, remove it
	if [ -h /boot/$KERNEL_IMAGE ] && [ "$(readlink /boot/$KERNEL_IMAGE)" = "$KERNEL_IMAGE-$KERNEL_LOCALVERSION" ]; then
		rm -f /boot/$KERNEL_IMAGE
	fi
	# same for initrd
	if [ -h /boot/initrd ] && [ "$(readlink /boot/initrd)" = "initrd.img-$KERNEL_LOCALVERSION" ]; then
		rm -f /boot/initrd
	fi
	# same for DTBs
	if [ -h /boot/dtb-dir ] && [ "$(readlink /boot/dtb-dir)" = "dtbs/$KERNEL_LOCALVERSION" ]; then
		rm -f /boot/dtb-dir
	fi
	# same for old dtb symlink
	if [ -h /boot/dtb ] && [ "$(readlink /boot/dtb)" = "dtbs/$KERNEL_LOCALVERSION" ]; then
		rm -f /boot/dtb
	fi
    ;;
    upgrade|failed-upgrade)
    ;;
    *)
	echo "prerm called with unknown argument \`$1'" >&2
	exit 1
    ;;
esac

# run standard prerm hooks
if [ -d "/etc/kernel/prerm.d" ]; then
	# TODO: kernel image as second argument, optional
	run-parts --report --exit-on-error --arg=$KERNEL_LOCALVERSION /etc/kernel/prerm.d
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
